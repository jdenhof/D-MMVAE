class_path: cmmvae.models.CMMVAEModel
init_args:
  kl_annealing_fn:
    class_path: cmmvae.modules.base.KLAnnealingFn
    init_args:
      kl_weight: 1.0
  record_gradients: false
  adv_weight: 10.0
  gradient_record_cap: 20
  module:
    class_path: cmmvae.modules.CMMVAE
    init_args:
      vae:
        class_path: cmmvae.modules.CLVAE
        init_args:
          latent_dim: 128
          # conditionals:
          # - assay
          # - donor_id
          # - dataset_id
          # - species
          encoder_config:
            class_path: cmmvae.modules.base.FCBlockConfig
            init_args:
              layers: [ 768, 512, 256 ]
              dropout_rate: 0.0
              use_batch_norm: False
              use_layer_norm: True
              activation_fn: torch.nn.ReLU
              return_hidden:
              - False
              - True
          decoder_config:
            class_path: cmmvae.modules.base.FCBlockConfig
            init_args:
              layers: [ 128, 256, 512, 768 ]
              dropout_rate: 0.0
              use_batch_norm: False
              use_layer_norm: False
              activation_fn: torch.nn.ReLU
          conditional_config:
            class_path: cmmvae.modules.base.FCBlockConfig
            init_args:
              layers:
              - 128
              dropout_rate: 0.0
              use_batch_norm: False
              use_layer_norm: True
              activation_fn: null
      experts:
        class_path: cmmvae.modules.base.Experts
        init_args:
          experts:
          - class_path: cmmvae.modules.base.Expert
            init_args:
              id: human
              encoder_config:
                class_path: cmmvae.modules.base.FCBlockConfig
                init_args:
                  layers: [ 60530, 1024, 768]
                  dropout_rate: [ 0.1, 0.1 ]
                  use_batch_norm: True
                  use_layer_norm: False
                  activation_fn: torch.nn.ReLU
              decoder_config:
                class_path: cmmvae.modules.base.FCBlockConfig
                init_args:
                  layers: [ 768, 1024, 60530 ]
                  dropout_rate: 0.0
                  use_batch_norm: False
                  use_layer_norm: False
                  activation_fn: torch.nn.ReLU
          - class_path: cmmvae.modules.base.Expert
            init_args:
              id: mouse
              encoder_config:
                class_path: cmmvae.modules.base.FCBlockConfig
                init_args:
                  layers: [ 52437, 1024, 768]
                  dropout_rate: [ 0.1, 0.1 ]
                  use_batch_norm: True
                  use_layer_norm: False
                  activation_fn: torch.nn.ReLU
              decoder_config:
                class_path: cmmvae.modules.base.FCBlockConfig
                init_args:
                  layers: [ 768, 1024, 52437 ]
                  dropout_rate: 0.0
                  use_batch_norm: False
                  use_layer_norm: False
                  activation_fn: torch.nn.ReLU
      adversarial_groups:
      - class_path: cmmvae.modules.base.AdversarialsGroup
          init_args:
            conditional: species
            adversarials: 
            - class_path: cmmvae.modules.base.FCBlockConfig
              init_args:
                layers: [ 256, 128, 64, 2]
                dropout_rate: 0.0
                use_batch_norm: False 
                use_layer_norm: False
                activation_fn: torch.nn.Sigmoid
        - class_path: cmmvae.modules.base.AdversarialsGroup
          init_args:
            conditional: assay
            adversarials:
            - class_path: cmmvae.modules.base.FCBlockConfig
              init_args:
                layers: [ 256, 128, 64, 26]
                dropout_rate: 0.0
                use_batch_norm: False 
                use_layer_norm: False
                activation_fn: torch.nn.Sigmoid
        - class_path: cmmvae.modules.base.AdversarialsGroup
          init_args:
            conditional: dataset_id
            adversarials:
            - class_path: cmmvae.modules.base.FCBlockConfig
              init_args:
                layers: [ 256, 256, 300, 396]
                dropout_rate: 0.0
                use_batch_norm: False 
                use_layer_norm: False
                activation_fn: torch.nn.Sigmoid
        - class_path: cmmvae.modules.base.AdversarialsGroup
          init_args:
            conditional: donor_id
            adversarials:
            - class_path: cmmvae.modules.base.FCBlockConfig
              init_args:
                layers: [ 256, 512, 1024, 7153]
                dropout_rate: 0.0
                use_batch_norm: False 
                use_layer_norm: False
                activation_fn: torch.nn.Sigmoid